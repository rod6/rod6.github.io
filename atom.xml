<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[17Go.Tech]]></title>
  <link href="www.17go.tech/atom.xml" rel="self"/>
  <link href="www.17go.tech/"/>
  <updated>2016-10-11T10:22:58+08:00</updated>
  <id>www.17go.tech/</id>
  <author>
    <name><![CDATA[]]></name>
    
  </author>
  <generator uri="http://www.mweb.im/">MWeb</generator>
  
  <entry>
    <title type="html"><![CDATA[Why Golang?]]></title>
    <link href="www.17go.tech/14749440477635.html"/>
    <updated>2016-09-27T10:40:47+08:00</updated>
    <id>www.17go.tech/14749440477635.html</id>
    <content type="html"><![CDATA[
<p>对于Go语言，有人喜欢有人黑，这很正常，但有一个不可忽视的事实：Go语言在中国越来越火。很多人已经撰文讲述子了自己选择Go作为主要开发语言的原因，对于Go语言本身的优劣不想重复，我希望从一个技术团队的决策者的角度来说一下我为什么会选择Go。我手头上的项目是一个全新的项目，可以完全没有历史包袱的来做出语言、框架、架构的选择，Go吸引我的大致有如下几点：</p>

<ul>
<li>语言社区的成熟度</li>
<li>开发人员的辨识度</li>
<li>开发经验的模糊化</li>
</ul>

<h2 id="toc_0">语言社区的成熟度</h2>

<p>启动一个商业项目，在对主开发语言进行选择时，一个非常重要的考量就是这个语言本身以及其社区是否足够活跃和成熟，尤其对于Go这样的新兴语言。</p>

<p>幸运的是，Go语言经过几年的发展，其语法特性已经非常稳定，而且Go的决策者们始终保持着语言本身的简洁性，没有将其语法引向复杂化，而是将主要的精力放在改善Go的工具链、语言的编译速度和运行效率等方面，尤其是GC的性能得到大幅改善，语言本身已经非常成熟。</p>

<p>语言的成熟，也带动了整个社区的发展，越来越多的开源项目采用Go来开发，比较典型的有Docker、etcd、consul、nsq、iris等，充分验证了语言本身的性能和稳定性，开源的Go语言项目已经几乎涵盖了后端开发所需要的方方面面。</p>

<h2 id="toc_1">开发人员的辨识度</h2>

<p>作为一个CTO，招聘到合适的开发人员是头等大事，在选择Go的时候，很多朋友都劝我：Go太小众，合适的开发人员太少了，还是用Java吧，满街都是。而我的观点与此不同，会Java的人是很多，但从中选择出真正优秀的人是需要大量的时间和精力的，</p>

<p>而Go不同，当前这个阶段，喜欢Go的人大多数都是真心喜欢技术的，他们对新技术有着浓厚的兴趣并敢于尝试、具有很强的学习能力，这种特质对我来说是非常有吸引力的。我始终认为，一个技术人员固步自封，不去努力学习和掌握新知识，只会让自己慢慢被淘汰。</p>

<p>正因为如此，选择Go语言本身，就已经帮我删选掉了只是把coding当作工作而不是兴趣的那些人，而我只需要考察其他特质即可。实践证明，我的确尝到了甜头，基本上我看到的候选者都是真心热爱技术的人，而我留下的兄弟都超出了我的预期，他们对技术的热爱使得整个团队有着良好的氛围。</p>

<h2 id="toc_2">开发经验的模糊化</h2>

<p>这是我特别看重的一件事情，作为技术团队的管理者，我希望每个开发人员写出的代码最好都能保持一致，除了命名、缩进的外在形式外，其逻辑结构、思维方式最好都能统一，这对整个团队的代码的复用和维护都有着非常好的作用。</p>

<p>Go从语言特性对这方面有特别好的影响，由于其语法简单、风格明确，甚至还有一整套的工具链来协助进行风格的统一，尤其是采用了微服务的架构模式后，每个模块的逻辑简单、清晰、单一，开发人员的个人经验对代码质量的影响远比C/C++等语言小的多，</p>

<h2 id="toc_3">总结</h2>

<p>选择一门语言，和决策者的个人喜好往往有很大的关系，我本人历来喜欢尝试新鲜事物，当伴随着Go社区的成熟，我这几年开始用Go来开发商业项目，并且找到了很棒的兄弟一起组建了效率很高的Go开发团队，目前大家在一起很快乐。</p>

<p>希望我的想法，能对其他的技术人员有一些参考和借鉴价值。</p>

]]></content>
  </entry>
  
</feed>
